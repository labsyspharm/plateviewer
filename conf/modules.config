/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'COMPUTEINTENSITIES' {
        publishDir = [
            path: { "${params.outdir}/computeintensities" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.channel}_${filename}" }
        ]
    }

    withName: 'DZPLATEVIEWER' {
        publishDir = [
            path: { "${params.outdir}/story" },
            mode: params.publish_dir_mode,
            saveAs: { filename ->
                def match
                if (filename.equals('versions.yml')) {
                    return null
                } else if (filename =~ /\.dzi$/) {
                    return null
                } else if (match = filename =~ $//(\d+)/(.*\.jpg)/$) {
                    def (_, level, base) = match[0]
                    return "${meta.channel}/${level}_${base}"
                }
            }
        ]
    }

}
